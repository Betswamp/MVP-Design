export const BETS_ABI = [
  {
    inputs: [
      { internalType: 'address', name: 'busd_token', type: 'address' },
      { internalType: 'address', name: 'bets_token', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
      { indexed: false, internalType: 'bool', name: 'decision', type: 'bool' },
    ],
    name: 'AddAdmin',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'user_address',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_amount',
        type: 'uint256',
      },
    ],
    name: 'Claim',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'event_id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum BetswampMVP.Category',
        name: 'category',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'sub_category',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'eventName',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'pool_size',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'eventTime',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'eventOne',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'eventTwo',
        type: 'string',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'betCreator',
        type: 'address',
      },
    ],
    name: 'CreateEvent',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'event_id',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'bettor_address',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum BetswampMVP.Occurences',
        name: 'occured',
        type: 'uint8',
      },
    ],
    name: 'PlaceBet',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_address',
        type: 'address',
      },
      { indexed: false, internalType: 'bool', name: 'decision', type: 'bool' },
    ],
    name: 'RemoveAdmin',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: '_oldOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_newOwner',
        type: 'address',
      },
    ],
    name: 'TransferOwnerShip',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'eventID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'enum BetswampMVP.Occurences',
        name: 'occurence',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'validator_address',
        type: 'address',
      },
    ],
    name: 'ValidateEvent',
    type: 'event',
  },
  {
    inputs: [{ internalType: 'address', name: '_address', type: 'address' }],
    name: 'addAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum BetswampMVP.Category',
        name: '_category',
        type: 'uint8',
      },
      { internalType: 'string', name: '_sub_category', type: 'string' },
    ],
    name: 'addSubbCategory',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'adminList',
    outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '_busd', type: 'address' },
      { internalType: 'address', name: '_bet', type: 'address' },
    ],
    name: 'changeContractAddresses',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'event_id', type: 'uint256' }],
    name: 'claimReward',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimValidationPoint',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum BetswampMVP.Category',
        name: '_category',
        type: 'uint8',
      },
      { internalType: 'string', name: '_sub_category', type: 'string' },
      { internalType: 'string', name: '_name', type: 'string' },
      { internalType: 'uint256', name: '_time', type: 'uint256' },
      { internalType: 'uint256', name: '_endTime', type: 'uint256' },
      { internalType: 'string', name: '_event1', type: 'string' },
      { internalType: 'string', name: '_event2', type: 'string' },
    ],
    name: 'createEvent',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'currenctTime',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],
    name: 'earnValidationPoints',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getActiveEvents',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
    name: 'getEvent',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'eventID', type: 'uint256' },
          {
            internalType: 'enum BetswampMVP.Category',
            name: 'categories',
            type: 'uint8',
          },
          { internalType: 'string', name: 'sub_category', type: 'string' },
          { internalType: 'string', name: 'eventName', type: 'string' },
          { internalType: 'uint256', name: 'poolSize', type: 'uint256' },
          { internalType: 'uint256', name: 'startTime', type: 'uint256' },
          { internalType: 'uint256', name: 'endTime', type: 'uint256' },
          { internalType: 'string', name: 'eventOne', type: 'string' },
          { internalType: 'string', name: 'eventTwo', type: 'string' },
          { internalType: 'bool', name: 'validated', type: 'bool' },
          {
            internalType: 'uint256',
            name: 'validatorsNeeded',
            type: 'uint256',
          },
          {
            internalType: 'enum BetswampMVP.Occurences',
            name: 'occured',
            type: 'uint8',
          },
          { internalType: 'uint256', name: 'bettorsCount', type: 'uint256' },
          {
            internalType: 'uint256',
            name: 'noOfBettorsRewarded',
            type: 'uint256',
          },
          { internalType: 'uint256', name: 'amountClaimed', type: 'uint256' },
          { internalType: 'address', name: 'betCreator', type: 'address' },
        ],
        internalType: 'struct BetswampMVP.BetEvent',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'event_id', type: 'uint256' },
      {
        internalType: 'enum BetswampMVP.Occurences',
        name: '_occurred',
        type: 'uint8',
      },
    ],
    name: 'getEventOccurrenceBetAmount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'event_id', type: 'uint256' },
      {
        internalType: 'enum BetswampMVP.Occurences',
        name: '_occured',
        type: 'uint8',
      },
    ],
    name: 'getOccurrenceBetCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getOwner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum BetswampMVP.Category',
        name: '_category',
        type: 'uint8',
      },
    ],
    name: 'getSubCategory',
    outputs: [{ internalType: 'string[]', name: '', type: 'string[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getUserEventHistory',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getValidatedEvents',
    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getValidatorsRequired',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_address', type: 'address' }],
    name: 'isAdmin',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'pause',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'event_id', type: 'uint256' },
      { internalType: 'uint256', name: '_amount', type: 'uint256' },
      {
        internalType: 'enum BetswampMVP.Occurences',
        name: '_occured',
        type: 'uint8',
      },
    ],
    name: 'placeBet',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: 'event_id', type: 'uint256' }],
    name: 'reclaimWager',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_address', type: 'address' }],
    name: 'removeAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'enum BetswampMVP.Category',
        name: '_category',
        type: 'uint8',
      },
      { internalType: 'string', name: '_sub_category', type: 'string' },
    ],
    name: 'removeSubCategory',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'revokeValidationPointsEarning',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_validators_required',
        type: 'uint256',
      },
    ],
    name: 'setValidatorsRequired',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'showValidationPoints',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'totalEvents',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'event_id', type: 'uint256' },
      { internalType: 'address', name: '_address', type: 'address' },
    ],
    name: 'transferCrumbs',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: 'event_id', type: 'uint256' },
      {
        internalType: 'enum BetswampMVP.Occurences',
        name: 'occurence',
        type: 'uint8',
      },
    ],
    name: 'validateEvent',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
]
